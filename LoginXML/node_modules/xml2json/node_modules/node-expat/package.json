{
  "name": "node-expat",
  "version": "2.3.15",
  "main": "./lib/node-expat",
  "description": "NodeJS binding for fast XML parsing.",
  "keywords": [
    "xml",
    "sax",
    "expat",
    "libexpat",
    "parse",
    "parsing"
  ],
  "scripts": {
    "preversion": "npm test",
    "lint": "standard",
    "unit": "vows --spec ./test/**/*.js",
    "test": "npm run unit && npm run lint",
    "benchmark": "node ./benchmark.js",
    "install": "node-gyp rebuild"
  },
  "dependencies": {
    "bindings": "^1.2.1",
    "nan": "^2.3.5"
  },
  "devDependencies": {
    "benchmark": "^2.1.0",
    "debug": "^2.2.0",
    "iconv": "^2.2.0",
    "libxmljs": "^0.18.0",
    "ltx": "^2.3.0",
    "node-xml": "^1.0.2",
    "sax": "^1.2.1",
    "standard": "^7.1.2",
    "vows": "^0.8.1"
  },
  "repository": {
    "type": "git",
    "url": "github:astro/node-expat"
  },
  "homepage": "http://github.com/astro/node-expat",
  "bugs": {
    "url": "https://github.com/astro/node-expat/issues"
  },
  "author": {
    "name": "Astro",
    "email": "astro@spaceboyz.net",
    "url": "http://spaceboyz.net/~astro/"
  },
  "contributors": [
    {
      "name": "Stephan Maka"
    },
    {
      "name": "Derek Hammer"
    },
    {
      "name": "Iein Valdez"
    },
    {
      "name": "Peter Körner"
    },
    {
      "name": "Camilo Aguilar"
    },
    {
      "name": "Michael Weibel"
    },
    {
      "name": "Alexey Zhuchkov"
    },
    {
      "name": "Satyam Shekhar"
    },
    {
      "name": "Dhruv Matani"
    },
    {
      "name": "Andreas Botsikas"
    },
    {
      "name": "Tom Hughes-Croucher"
    },
    {
      "name": "Nathan Rajlich"
    },
    {
      "name": "Julien Genestoux"
    },
    {
      "name": "Sonny Piers"
    },
    {
      "name": "Lloyd Watkin"
    },
    {
      "name": "AJ ONeal"
    },
    {
      "name": "Rod Vagg"
    },
    {
      "name": "Christoph Hartmann"
    },
    {
      "name": "Corbin Uselton"
    },
    {
      "name": "Julian Duque"
    },
    {
      "name": "Lovell Fuller"
    },
    {
      "name": "Antonio Bustos"
    }
  ],
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "license": "MIT",
  "gypfile": true,
  "readme": "# node-expat\n\n[![build status](https://img.shields.io/travis/astro/node-expat/master.svg?style=flat-square)](https://travis-ci.org/astro/node-expat/branches)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](http://standardjs.com/)\n\n## Motivation\n\nYou use [Node.js](https://nodejs.org) for speed? You process XML streams? Then you want the fastest XML parser: [libexpat](http://expat.sourceforge.net/)!\n\n## Install\n\n```\nnpm install node-expat\n```\n\n## Usage\n\nImportant events emitted by a parser:\n\n```javascript\n(function () {\n  \"use strict\";\n\n  var expat = require('node-expat')\n  var parser = new expat.Parser('UTF-8')\n\n  parser.on('startElement', function (name, attrs) {\n    console.log(name, attrs)\n  })\n\n  parser.on('endElement', function (name) {\n    console.log(name)\n  })\n\n  parser.on('text', function (text) {\n    console.log(text)\n  })\n\n  parser.on('error', function (error) {\n    console.error(error)\n  })\n\n  parser.write('<html><head><title>Hello World</title></head><body><p>Foobar</p></body></html>')\n\n}())\n\n```\n\n## API\n\n* `#on('startElement' function (name, attrs) {})`\n* `#on('endElement' function (name) {})`\n* `#on('text' function (text) {})`\n* `#on('processingInstruction', function (target, data) {})`\n* `#on('comment', function (s) {})`\n* `#on('xmlDecl', function (version, encoding, standalone) {})`\n* `#on('startCdata', function () {})`\n* `#on('endCdata', function () {})`\n* `#on('entityDecl', function (entityName, isParameterEntity, value, base, systemId, publicId, notationName) {})`\n* `#on('error', function (e) {})`\n* `#stop()` pauses\n* `#resume()` resumes\n\n## Error handling\n\nWe don't emit an error event because libexpat doesn't use a callback\neither. Instead, check that `parse()` returns `true`. A descriptive\nstring can be obtained via `getError()` to provide user feedback.\n\nAlternatively, use the Parser like a node Stream. `write()` will emit\nerror events.\n\n## Namespace handling\n\nA word about special parsing of *xmlns:* this is not necessary in a\nbare SAX parser like this, given that the DOM replacement you are\nusing (if any) is not relevant to the parser.\n\n## Benchmark\n\n`npm run benchmark`\n\n| module                                                                                | ops/sec | native | XML compliant | stream         |\n|---------------------------------------------------------------------------------------|--------:|:------:|:-------------:|:--------------:|\n| [sax-js](https://github.com/isaacs/sax-js)                                            |  99,412 | ☐      | ☑             | ☑              |\n| [node-xml](https://github.com/dylang/node-xml)                                        | 130,631 | ☐      | ☑             | ☑              |\n| [libxmljs](https://github.com/polotek/libxmljs)                                       | 276,136 | ☑      | ☑             | ☐              |\n| **node-expat**                                                                        | 322,769 | ☑      | ☑             | ☑              |\n\nHigher is better.\n\n## Testing\n\n```\nnpm install -g standard\nnpm test\n```\n\n## Windows\n\nIf you fail to install node-expat as a dependency of node-xmpp, please update node-xmpp as it doesn't use node-expat anymore.\n\nDependencies for `node-gyp` https://github.com/TooTallNate/node-gyp#installation\n\nSee https://github.com/astro/node-expat/issues/78 if you are getting errors about not finding `nan.h`.\n\n### expat.vcproj\n\n```\nVCBUILD : error : project file 'node-expat\\build\\deps\\libexpat\\expat.vcproj' was not found or not a valid proj\nect file. [C:\\Users\\admin\\AppData\\Roaming\\npm\\node_modules\\node-expat\\build\\bin\nding.sln]\n```\n\nInstall [Visual Studio C++ 2012](http://go.microsoft.com/?linkid=9816758) and run npm with the [`--msvs_version=2012` flag](http://stackoverflow.com/a/16854333/937891).\n",
  "readmeFilename": "README.md",
  "_id": "node-expat@2.3.15",
  "_from": "node-expat@^2.3.9"
}
